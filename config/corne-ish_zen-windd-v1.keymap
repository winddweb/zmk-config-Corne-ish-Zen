/*
*
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
* Modified by: Yifeng
* Modified on: 2021-11-04
* Version: v0.99 rc
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LOW 1
#define RAI 2
#define NAV 3
#define ADJ 4

/ {
        combos {
                compatible = "zmk,combos";
                combo_esc {
                    timeout-ms = <50>;
                    key-positions = <17 29>; // F B
                    layers = <0>; //default layer only
                    bindings = <&mo ADJ>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "";
                        bindings = <
&kp ESC       &kp Q    &kp W    &kp E    &kp R    &kp T       &kp Y    &kp U     &kp I        &kp O      &kp P       &kp BSPC
&lt NAV CAPS  &kp A    &kp S    &kp D    &kp F    &kp G       &kp H    &kp J     &kp K        &kp L      &kp SEMI    &kp RET
&kp LSHFT     &kp Z    &kp X    &kp C    &kp V    &kp B       &kp N    &kp M     &kp COMMA    &kp DOT    &kp FSLH &mt RSHFT SQT
                     &kp LALT    &kp LCMD &lt LOW SPACE       &lt RAI SPACE &mt RCMD TAB    &kp LCTRL
                        >;
                };

                low_layer {
                        label = "";
                        bindings = <
&kp GRAVE    &kp N1    &kp N2    &kp N3  &kp N4   &kp N5       &kp N6   &kp N7   &kp N8  &kp N9  &kp N0  &kp DOT
&lt NAV TAB  &kp F1    &kp F2    &kp F3  &kp F4   &kp F5       &kp F6   &kp N4   &kp N4  &kp N6  &trans  &trans
&trans       &kp F7    &kp F8    &kp F9  &kp F10  &kp F11      &kp F12  &kp N1   &kp N2  &kp N3  &trans  &trans
                                  &trans  &trans  &trans       &trans  &trans  &trans
                        >;
                };

                rai_layer {
                        label = "";
                        bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans     &trans    &trans  &trans    &trans    &trans        &kp PIPE   &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &trans
&trans     &trans    &trans  &trans    &trans    &trans        &kp BSLH   &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &trans
                                 &trans  &trans  &trans        &trans  &trans  &trans
                        >;
                };

                nav_layer {
                        label = "";
                        bindings = <
&kp LG(W)  &kp LC(LS(TAB))  &kp UP    &kp LC(TAB)  &kp PG_UP  &trans       &kp TAB  &kp PG_DN  &kp PG_UP  &kp LS(TAB)  &trans  &trans
&trans     &kp LEFT         &kp DOWN  &kp RIGHT    &kp PG_DN  &trans       &kp LEFT &kp DOWN   &kp UP     &kp RIGHT    &trans  &trans
&trans     &trans           &trans    &trans       &trans     &trans       &trans   &trans     &trans     &trans       &trans  &trans
                                             &trans  &trans  &kp RET       &kp DEL  &trans  &trans
                        >;
                };

                adj_layer {
                        label = "";
                        bindings = <
&reset       &none        &none        &none        &none        &none          &none  &none  &none  &none  &none  &none
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none          &none  &none  &none  &none  &none  &none
&none        &none        &none        &none        &bt BT_CLR   &none          &none  &none  &none  &none  &none  &none
                                                   &none  &none  &none          &none  &none  &none
                        >;
                };
                adj_layer {
                     label = "NAV";
                     bindings = <
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans       &trans  &trans  &trans
                     >;
             };
        };
};